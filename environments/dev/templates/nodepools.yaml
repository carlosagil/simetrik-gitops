---
# Source: simetrik/templates/nodepools.yaml
apiVersion: karpenter.k8s.aws/v1beta1
kind: NodeClass
metadata:
  name: default
spec:
  amiFamily: AL2
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 50Gi
        volumeType: gp3
        deleteOnTermination: true
  subnetSelector:
    karpenter.sh/discovery: "true"
  securityGroupSelector:
    karpenter.sh/discovery: "true"
---
# Source: simetrik/templates/nodepools.yaml
apiVersion: karpenter.k8s.aws/v1beta1
kind: NodePool
metadata:
  name: default
spec:
  disruption:
    consolidationPolicy: WhenUnderutilized
    consolidateAfter: 30s
    expireAfter: 720h # Refresh nodes every 30 days
  limits:
    cpu: "1000"
    memory: 1000Gi
  template:
    spec:
      requirements:
        - key: "karpenter.sh/capacity-type"
          operator: In
          values: ["spot", "on-demand"]  # Prioritizes spot, falls back to on-demand
        - key: "kubernetes.io/arch"
          operator: In
          values: ["amd64"]
        - key: "karpenter.k8s.aws/instance-family"
          operator: In
          values: 
            - c5
            - m5
            - r5
            - c6i
            - m6i
            - r6i
        # Exclude less efficient instance families
        - key: "karpenter.k8s.aws/instance-family"
          operator: NotIn
          values:
            - t3
            - t3a
            - t4g
            - t2
            - i3
            - i4i
            - i3en
            - c6id
            - m6id
            - r6id
            - d3
            - d3en
        - key: "karpenter.k8s.aws/instance-size"
          operator: In
          values:
            - large
            - xlarge
            - 2xlarge
        - key: "karpenter.k8s.aws/instance-hypervisor"
          operator: In
          values: ["nitro"]
        - key: "kubernetes.io/os"
          operator: In
          values: ["linux"]
        - key: "topology.kubernetes.io/zone"
          operator: In
          values: ["us-east-1a", "us-east-1b", "us-east-1c"]
      nodeClassRef:
        name: default
