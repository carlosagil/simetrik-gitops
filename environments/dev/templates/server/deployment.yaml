---
# Source: simetrik/templates/server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  labels:
    helm.sh/chart: simetrik-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: simetrik
    app.kubernetes.io/name: server
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: server
      app.kubernetes.io/instance: simetrik
  template:
    metadata:
      labels:
        app.kubernetes.io/name: server
        app.kubernetes.io/instance: simetrik
      annotations:
        # Enable automatic Spot interruption handling
        "karpenter.sh/do-not-evict": "false"
    spec:
      # Graceful termination period
      terminationGracePeriodSeconds: 30
      # Topology spread for high availability
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfied: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: server
      # Pod anti-affinity for better distribution
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: server
                topologyKey: kubernetes.io/hostname
      containers:
        - name: server
          image: "294405308722.dkr.ecr.us-east-1.amazonaws.com/simetrik-server:c7f6ddf"
          imagePullPolicy: IfNotPresent
          ports:
            - name: grpc
              containerPort: 50051
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
          # Faster health checks for quicker pod replacement
          livenessProbe:
            tcpSocket:
              port: 50051
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            tcpSocket:
              port: 50051
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 10"]
